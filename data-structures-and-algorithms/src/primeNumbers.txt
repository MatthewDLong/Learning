Count the number of prime numbers less than a non-negative number, n.

Example 1:
Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.

Example 2:
Input: n = 0
Output: 0

Example 3:
Input: n = 1
Output: 0 

Constraints:

0 <= n <= 5 * 106

--------------

Sieve of Eratosthenes

n = 20

[
0 false,
1 false,
2 true,
3 true,
4 false,
5 true,
6 false,
7 true,
8 false,
9 false,
10 false,
11 true,
12 false,
13 true,
14 false,
15 false,
16 false,
17 true,
18 false,
19 true,
20 false
]

primes = [2,3,5,7,11,13,17,19]

Output 8

Pseudocode

function sieve (n (number))
  var primes = array
  
  for number from 0 - number - 1;
    primes[number] = true
  endfor

  primes[0] = false
  primes[1] = false

  for i = 2, until i <= square root of n
    for j = 2, until j * i <= n
      primes[j * i] = false
    endfor
  endfor

  remove all the false values from primes

  return the count of primes

endfunction


































