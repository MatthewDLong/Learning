kubeadm command to init cluster

kubeadm v1.25.3

`kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.56.2 --cri-socket=unix:///var/run/cri-dockerd.sock`

> Your Kubernetes control-plane has initialized successfully!

> To start using your cluster, you need to run the following as a regular user:

```
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
```

> Alternatively, if you are the root user, you can run:

`export KUBECONFIG=/etc/kubernetes/admin.conf`

You should now deploy a pod network to the cluster.

Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:

https://kubernetes.io/docs/concepts/cluster-administration/addons/

> Then you can join any number of worker nodes by running the following on each as root:

`kubeadm join 192.168.56.2:6443 --cri-socket=unix:///var/run/cri-dockerd.sock --token rret9n.zlndsbzo5cjlxano --discovery-token-ca-cert-hash sha256:9790d61d4a065fb8538d37e70ec31cebd31517cc01ec2b7652a4800d9a604963`

Concepts reading

[] Services, Load Balancing, and Networking
[] Scheduling, Preemption and Eviction
[] Policies
[] Cluster Administration
[] Configuration
[] Cluster Architecture
[] Containers
[] Workloads
[] Storage
[] Security
[] Extending Kubernetes

Tutorial: Deploying Cassandra with a StatefulSet []

https://kubernetes.io/docs/tutorials/stateful-application/cassandra/
